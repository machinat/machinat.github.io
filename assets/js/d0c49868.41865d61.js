"use strict";(self.webpackChunkmachinat_github_io=self.webpackChunkmachinat_github_io||[]).push([[6835],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return g}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var m=a.createContext({}),p=function(e){var t=a.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(m.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,m=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=p(n),g=r,h=u["".concat(m,".").concat(g)]||u[g]||c[g]||o;return n?a.createElement(h,l(l({ref:t},s),{},{components:n})):a.createElement(h,l({ref:t},s))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=u;var i={};for(var m in t)hasOwnProperty.call(t,m)&&(i[m]=t[m]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var p=2;p<o;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},994:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return m},default:function(){return g},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return c}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),l=["components"],i={title:"Telegram Platform",sidebar_label:"Telegram"},m=void 0,p={unversionedId:"telegram-platform",id:"telegram-platform",title:"Telegram Platform",description:"The @machinat/telegram platform enable your app to receive/send messages as a",source:"@site/docs/telegram-platform.md",sourceDirName:".",slug:"/telegram-platform",permalink:"/docs/telegram-platform",draft:!1,editUrl:"https://github.com/machinat/machinat/edit/master/website/docs/telegram-platform.md",tags:[],version:"current",frontMatter:{title:"Telegram Platform",sidebar_label:"Telegram"},sidebar:"docs",previous:{title:"Messenger",permalink:"/docs/messenger-platform"},next:{title:"Line",permalink:"/docs/line-platform"}},s={},c=[{value:"Install",id:"install",level:2},{value:"Steup",id:"steup",level:2},{value:"Usage",id:"usage",level:2},{value:"Webview",id:"webview",level:2},{value:"Auth Setup",id:"auth-setup",level:3},{value:"Open the Webview",id:"open-the-webview",level:3},{value:"Assets Manager",id:"assets-manager",level:2},{value:"Resources",id:"resources",level:2}],u={toc:c};function g(e){var t=e.components,n=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"@machinat/telegram")," platform enable your app to receive/send messages as a\n",(0,o.kt)("a",{parentName:"p",href:"https://core.telegram.org/bots"},"Telegram bot"),"."),(0,o.kt)("h2",{id:"install"},"Install"),(0,o.kt)("p",null,"Install the ",(0,o.kt)("inlineCode",{parentName:"p"},"core"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"http")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"telegram")," packages:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @machinat/core @machinat/http @machinat/telegram\n")),(0,o.kt)("h2",{id:"steup"},"Steup"),(0,o.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"})),(0,o.kt)("p",null,"You can check ",(0,o.kt)("a",{parentName:"p",href:"https://machinat.com/docs/learn/create-app#platform-setup?p=telegram"},"setup section in the tutorial"),".\nIt brings you to set up everything step by step.\n:::"),(0,o.kt)("p",null,"First, you need to apply a Telegram bot from ",(0,o.kt)("a",{parentName:"p",href:"https://t.me/botfather"},"@Botfather"),".\nFollow ",(0,o.kt)("a",{parentName:"p",href:"https://core.telegram.org/bots#6-botfather"},"the official guide"),"\nfor the setup procedures."),(0,o.kt)("p",null,"Then set up the ",(0,o.kt)("inlineCode",{parentName:"p"},"http")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"telegram")," module like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import Machinat from '@machinat/core';\nimport Http from '@machinat/http';\nimport Telegram from '@machinat/telegram';\n\nconst {\n  TELEGRAM_BOT_NAME,\n  TELEGRAM_BOT_TOKEN,\n  TELEGRAM_SECRET_PATH,\n} = process.env;\n\nconst app = Machinat.createApp({\n  modules: [\n    Http.initModule({ port: 8080 }),\n  ],\n  platforms: [\n    Telegram.intiModule({\n      webhookPath: '/webhook/telegram', // webhook path\n      botName: TELEGRAM_BOT_NAME,       // bot name\n      botToken: TELEGRAM_BOT_TOKEN,     // bot token\n      secretPath: TELEGRAM_SECRET_PATH, // secret path for webhook\n    }),\n  ],\n});\n")),(0,o.kt)("p",null,"Finally, you have to register the webhook to subscribe to events from Telegram.\nYou can use these codes to do that:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { TelegramBot } from '@machinat/telegram';\nconst { DOMAIN, TELEGRAM_BOT_TOKEN, TELEGRAM_SECRET_PATH } = process.env;\n\nconst bot = new TelegramBot({ token: TELEGRAM_BOT_TOKEN });\nbot\n  .start()\n  .then(() =>\n    bot.makeApiCall('setWebhook', {\n      // webhook url with trailing secretPath\n      url: `https://${DOMAIN}/webhook/telegram/${TELEGRAM_SECRET_PATH}`,\n    })\n  );\n")),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,"Here is an example to receive events and send replies back:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import Machinat from '@machinat/core';\nimport * as Telegram from '@machinat/telegram/components';\nimport app from './app';\n\napp.onEvent(async ({ platform, event, reply }) => {\n  if (platform === 'telegram' && event.type === 'text') {\n    await reply(\n      <Telegram.Expression\n        disableNotification\n        replyMarkup={\n          <Telegram.ReplyKeyboard resizeKeyboard oneTimeKeyboard>\n            <Telegram.TextReply title=\"More \ud83d\udc31\" payload=\"catto\" />\n            <Telegram.TextReply text=\"I want \ud83d\udc36\" data=\"doggo\" />\n          </Telegram.ReplyKeyboard>\n        }\n      >\n        <p>Hello Telegram! \ud83d\udc4b</p>\n        <p>It's your daily \ud83d\udc31</p>\n        <img src=\"https://cataas.com/cat\" />\n      </Telegram.Expression>\n    );\n  }\n});\n")),(0,o.kt)("p",null,"Check the API reference for the details of ",(0,o.kt)("a",{parentName:"p",href:"https://machinat.com/api/modules/telegram.html#telegramevent"},"events"),"\nand ",(0,o.kt)("a",{parentName:"p",href:"https://machinat.com/api/modules/telegram_components.html"},"components"),"."),(0,o.kt)("h2",{id:"webview"},"Webview"),(0,o.kt)("h3",{id:"auth-setup"},"Auth Setup"),(0,o.kt)("p",null,"To use ",(0,o.kt)("a",{parentName:"p",href:"./embedded-webview"},"webviews")," in Telegram,\nconfigure the app with these steps:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Send ",(0,o.kt)("inlineCode",{parentName:"li"},"/setdomain")," command to ",(0,o.kt)("a",{parentName:"li",href:"https://t.me/botfather"},"@Botfather")," to register the domain of your bot."),(0,o.kt)("li",{parentName:"ol"},"Add the auth provider to the ",(0,o.kt)("inlineCode",{parentName:"li"},"webview")," platform. Like:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import Webview from '@machinat/webview';\nimport TelegramAuth from '@machinat/telegram/webview';\n\nconst app = Machinat.createApp({\n  platforms: [\n    Webview.intiModule({\n      authPlatforms: [\n        TelegramAuth\n      ],\n      // ...\n    }),\n  ],\n});\n")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Expose your bot name in ",(0,o.kt)("inlineCode",{parentName:"li"},"next.config.js"),":")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"// highlight-next-line\nconst { TELEGRAM_BOT_NAME } = process.env;\n\nmodule.exports = {\n  publicRuntimeConfig: {\n    // highlight-next-line\n    TELEGRAM_BOT_NAME,\n  },\n};\n")),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},"Set up the ",(0,o.kt)("inlineCode",{parentName:"li"},"WebviewClient")," in the webview:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import getConfig from 'next/config';\nimport WebviewClient from '@machinat/webview/client';\nimport TelegramAuth from '@machinat/telegram/webview/client';\n\nconst {\n  publicRuntimeConfig: { TELEGRAM_BOT_NAME },\n} = getConfig();\n\nconst client =  new WebviewClient({\n  authPlatforms: [\n    new TelegramAuth({ botName: TELEGRAM_BOT_NAME }),\n  ],\n});\n")),(0,o.kt)("h3",{id:"open-the-webview"},"Open the Webview"),(0,o.kt)("p",null,"The webview can be opened by a ",(0,o.kt)("inlineCode",{parentName:"p"},"WebviewButton")," in the chatroom.\nLike:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import * as Telegram from '@machinat/telegram/components';\nimport { WebviewButton as TelegramWebviewButton } from '@machinat/telegram/webview';\n\napp.onEvent(async ({ reply }) => {\n  await reply(\n    <Telegram.Expression\n      replyMarkup={\n        <Telegram.InlineKeyboard>\n          <TelegramWebviewButton text=\"Open \ud83d\udce4\" />\n        </Telegram.InlineKeyboard>\n      }\n    >\n      Hello Webview!\n    </Telegram.Expression>\n  );\n});\n")),(0,o.kt)("p",null,"The users will be logged in with Telegram account in the webview.\nCheck the ",(0,o.kt)("a",{parentName:"p",href:"https://machinat.com/docs/embedded-webview"},"webview document")," to learn more."),(0,o.kt)("h2",{id:"assets-manager"},"Assets Manager"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://machinat.com/api/classes/telegram_asset.telegramassetsmanager.html"},(0,o.kt)("inlineCode",{parentName:"a"},"TelegramAssetsManager")),"\nservice helps you to manage resources on Telegram platform,\nlike files."),(0,o.kt)("p",null,"To use it, you have to install a ",(0,o.kt)("a",{parentName:"p",href:"./using-states"},"state provider")," first.\nThen register ",(0,o.kt)("inlineCode",{parentName:"p"},"TelegramAssetsManager")," like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { FileState } from '@machinat/dev-tools';\n// highlight-next-line\nimport TelegramAssetsManager, { saveUplodedFile } from '@machinat/telegram/asssets';\n\nconst app = Machinat.createApp({\n  services: [\n    // highlight-next-line\n    TelegramAssetsManager,\n  ],\n  platforms: [\n    Telegram.initModule({\n      dispatchMiddlewares: [\n        // highlight-next-line\n        saveUplodedFile,\n      ],\n      // ...\n    }),\n  ],\n  modules: [\n    RedisState.initModule({\n      clientOptions: { url: REDIS_URL },\n    }),\n  ],\n});\n")),(0,o.kt)("p",null,"Here's an example to upload an image message and reuse it:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import fs from 'fs';\nimport { makeContainer } from '@machinat/core';\nimport * as Telegram from '@machinat/telegram/components';\nimport TelegramAssetsManager from '@machinat/telegram/asssets';\n\napp.onEvent(makeContainer({ deps: [TelegramAssetsManager] })(\n  (assetsManager) =>\n    async ({ reply }) => {\n      const fooImageId = await assetsManager.getFile('foo.image');\n\n      if (fooImageId) {\n        await reply(\n          <Telegram.Image fileId={fooImageId} />\n        );\n      } else {\n        await reply(\n          <Telegram.Image\n            assetTag=\"foo.image\"\n            fileData={fs.createReadStream('./assets/foo.jpg')}\n          />\n        );\n      }\n    }\n));\n")),(0,o.kt)("p",null,"If you upload a file with ",(0,o.kt)("inlineCode",{parentName:"p"},"assetTag")," prop,\n",(0,o.kt)("inlineCode",{parentName:"p"},"saveUplodedFile")," middleware will save the returned file id.\nYou can reuse the stored id for the next time."),(0,o.kt)("h2",{id:"resources"},"Resources"),(0,o.kt)("p",null,"Here are some resources for further reading:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://machinat.com/api/modules/telegram.html"},(0,o.kt)("inlineCode",{parentName:"a"},"@machinat/telegram")," package reference")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://core.telegram.org/bots"},"Telegram bot API reference"))))}g.isMDXComponent=!0}}]);