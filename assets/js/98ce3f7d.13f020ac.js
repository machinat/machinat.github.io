"use strict";(self.webpackChunkmachinat_github_io=self.webpackChunkmachinat_github_io||[]).push([[5059],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(t),m=r,g=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return t?a.createElement(g,i(i({ref:n},u),{},{components:t})):a.createElement(g,i({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=p;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},5162:function(e,n,t){t.d(n,{Z:function(){return i}});var a=t(7294),r=t(6010),o="tabItem_Ymn6";function i(e){var n=e.children,t=e.hidden,i=e.className;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,i),hidden:t},n)}},5488:function(e,n,t){t.d(n,{Z:function(){return m}});var a=t(7462),r=t(7294),o=t(6010),i=t(2389),l=t(7392),s=t(7094),c=t(2466),u="tabList__CuJ",d="tabItem_LNqP";function p(e){var n,t,i=e.lazy,p=e.block,m=e.defaultValue,g=e.values,f=e.groupId,v=e.className,h=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),k=null!=g?g:h.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),b=(0,l.l)(k,(function(e,n){return e.value===n.value}));if(b.length>0)throw new Error('Docusaurus error: Duplicate values "'+b.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===m?m:null!=(n=null!=m?m:null==(t=h.find((function(e){return e.props.default})))?void 0:t.props.value)?n:h[0].props.value;if(null!==y&&!k.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+k.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var N=(0,s.U)(),w=N.tabGroupChoices,x=N.setTabGroupChoices,C=(0,r.useState)(y),T=C[0],z=C[1],I=[],O=(0,c.o5)().blockElementScrollPositionUntilNextRender;if(null!=f){var R=w[f];null!=R&&R!==T&&k.some((function(e){return e.value===R}))&&z(R)}var E=function(e){var n=e.currentTarget,t=I.indexOf(n),a=k[t].value;a!==T&&(O(n),z(a),null!=f&&x(f,String(a)))},D=function(e){var n,t=null;switch(e.key){case"ArrowRight":var a,r=I.indexOf(e.currentTarget)+1;t=null!=(a=I[r])?a:I[0];break;case"ArrowLeft":var o,i=I.indexOf(e.currentTarget)-1;t=null!=(o=I[i])?o:I[I.length-1]}null==(n=t)||n.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":p},v)},k.map((function(e){var n=e.value,t=e.label,i=e.attributes;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:T===n?0:-1,"aria-selected":T===n,key:n,ref:function(e){return I.push(e)},onKeyDown:D,onFocus:E,onClick:E},i,{className:(0,o.Z)("tabs__item",d,null==i?void 0:i.className,{"tabs__item--active":T===n})}),null!=t?t:n)}))),i?(0,r.cloneElement)(h.filter((function(e){return e.props.value===T}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},h.map((function(e,n){return(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==T})}))))}function m(e){var n=(0,i.Z)();return r.createElement(p,(0,a.Z)({key:String(n)},e))}},2058:function(e,n,t){t.r(n),t.d(n,{DiffAddTodoCodes:function(){return g},assets:function(){return m},contentTitle:function(){return d},default:function(){return h},frontMatter:function(){return u},metadata:function(){return p},toc:function(){return f}});var a=t(7462),r=t(3366),o=(t(7294),t(3905)),i=t(3066),l=t(5488),s=t(5162),c=["components"],u={title:"Recognize Intent"},d=void 0,p={unversionedId:"learn/recognize-intent",id:"learn/recognize-intent",title:"Recognize Intent",description:"Our app will encounter all kinds of messages in the real world.",source:"@site/docs/learn/recognize-intent.mdx",sourceDirName:"learn",slug:"/learn/recognize-intent",permalink:"/docs/learn/recognize-intent",draft:!1,editUrl:"https://github.com/machinat/machinat/edit/master/website/docs/learn/recognize-intent.mdx",tags:[],version:"current",frontMatter:{title:"Recognize Intent"},sidebar:"docs",previous:{title:"Service and State",permalink:"/docs/learn/service-and-state"},next:{title:"Dialog Script",permalink:"/docs/learn/dialog-script"}},m={},g=function(e){var n=e.platform;return(0,o.kt)("div",null,(0,o.kt)(i.Z,{language:"diff",title:"src/handlers/handleChat.tsx",mdxType:"CodeBlock"},"  // ...\n      const { event, reply } = ctx;\n      const intent = await getIntent(event);"+("telegram"===n?"\n      if (!event.channel) {\n        return;\n      }":"")+"\n\n+     if (intent.type === 'add') {\n+       return reply(<p>Please enter new todo name:</p>);\n+     }\n      // ...\n\n-     if (event.type === 'text') {\n-       const matchingAddTodo = event.text.match(/add(s+todo)?(.*)/i);\n-       if (matchingAddTodo) {\n-         const todoName = matchingAddTodo[2].trim();\n-\n-         const { data } = await todoController.addTodo(event.channel, todoName);\n-         return reply(\n-           <WithMenu todoCount={data.todos.length}>\n-             <p>Todo \"<b>{todoName}</b>\" is added!</p>\n-           </WithMenu>\n-         );\n-       }\n-     }\n  //..."))},f=[{value:"Recognize Text",id:"recognize-text",level:2},{value:"Intent Recognizer",id:"intent-recognizer",level:2},{value:"Recognition Providers",id:"recognition-providers",level:2}],v={DiffAddTodoCodes:g,toc:f};function h(e){var n=e.components,i=(0,r.Z)(e,c);return(0,o.kt)("wrapper",(0,a.Z)({},v,i,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Our app will encounter all kinds of messages in the real world.\nRecognizing users' intent is therefore difficult but crucial for user experiences.\nIn this lesson, we'll learn how to detect intent from random text messages."),(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("em",{parentName:"p"},"Time to accomplish: 10 minutes"))),(0,o.kt)("h2",{id:"recognize-text"},"Recognize Text"),(0,o.kt)("p",null,"In the previous lesson, we used ",(0,o.kt)("inlineCode",{parentName:"p"},"RegExp")," to recognize the ",(0,o.kt)("inlineCode",{parentName:"p"},"add todo <name>")," command.\nIt's not very intuitive to use, and also really annoying when input."),(0,o.kt)("p",null,"So let's use a smarter way to recognize users' intent.\nEdit ",(0,o.kt)("inlineCode",{parentName:"p"},"handleChat")," handler like this:"),(0,o.kt)(l.Z,{groupId:"chat-platforms",defaultValue:"messenger",values:[{label:"Messenger",value:"messenger"},{label:"Telegram",value:"telegram"},{label:"LINE",value:"line"}],mdxType:"Tabs"},(0,o.kt)(s.Z,{value:"messenger",mdxType:"TabItem"},(0,o.kt)(g,{platform:"messenger",mdxType:"DiffAddTodoCodes"})),(0,o.kt)(s.Z,{value:"telegram",mdxType:"TabItem"},(0,o.kt)(g,{platform:"telegram",mdxType:"DiffAddTodoCodes"})),(0,o.kt)(s.Z,{value:"line",mdxType:"TabItem"},(0,o.kt)(g,{platform:"line",mdxType:"DiffAddTodoCodes"}))),(0,o.kt)("p",null,"Then add these intents data in ",(0,o.kt)("inlineCode",{parentName:"p"},"src/recognitionData.ts"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'{9-18} title="src/recognitionData.ts"',"{9-18}":!0,title:'"src/recognitionData.ts"'},"export default {\n  defaultLanguage: 'en',\n  languages: ['en'],\n  intents: {\n    greeting: {/* ... */},\n    about: {/* ... */},\n    yes: {/* ... */},\n    no: {/* ... */},\n    add: {\n      trainingPhrases: {\n        en: ['add', 'new', 'add todo', 'new todo', 'create todo'],\n      },\n    },\n    list: {\n      trainingPhrases: {\n        en: ['todos', 'show todos', 'list todos', 'my todos', 'check todos'],\n      },\n    },\n  },\n};\n")),(0,o.kt)("p",null,"Now the bot can recognize simple instructions to ",(0,o.kt)("inlineCode",{parentName:"p"},"list")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"add")," todo.\nLike this:"),(0,o.kt)("img",{width:400,src:t(4291).Z}),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"The message need to match one of the ",(0,o.kt)("inlineCode",{parentName:"p"},"trainingPhrases")," partially\nwhile using ",(0,o.kt)("inlineCode",{parentName:"p"},"RegexRecogntion"),"."))),(0,o.kt)("h2",{id:"intent-recognizer"},"Intent Recognizer"),(0,o.kt)("p",null,"Let's look into ",(0,o.kt)("inlineCode",{parentName:"p"},"useIntent")," services to see what happens.\nCheck the ",(0,o.kt)("inlineCode",{parentName:"p"},"src/services/useIntent.ts")," file:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'{8-9} title="src/services/useIntent.ts"',"{8-9}":!0,title:'"src/services/useIntent.ts"'},"import { makeFactoryProvider, IntentRecognizer } from '@machinat/core';\nimport { ChatEventContext } from '../types';\n\nconst useIntent =\n  (recognizer: IntentRecognizer) =>\n  async (event: ChatEventContext['event']) => {\n    if (event.type === 'text') {\n      const intent = await recognizer.detectText(event.channel, event.text);\n      return intent;\n    }\n    //...\n  };\n\nexport default makeFactoryProvider({\n  deps: [IntentRecognizer],\n})(useIntent);\n")),(0,o.kt)("p",null,"The intent is detected by the ",(0,o.kt)("inlineCode",{parentName:"p"},"IntentRecognizer")," service. The\n",(0,o.kt)("inlineCode",{parentName:"p"},"recognizer.detectText(channel, text)")," method returns result like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'{\n  type: "list",  // correspond to the intent name at `regresionData`\n  confidence: 1, // confident level of the result, range 0-1\n  payload: null  // raw data from the implementation\n}\n')),(0,o.kt)("p",null,"So we can reply according to the ",(0,o.kt)("inlineCode",{parentName:"p"},"intent.type")," at ",(0,o.kt)("inlineCode",{parentName:"p"},"handleChat"),"."),(0,o.kt)("h2",{id:"recognition-providers"},"Recognition Providers"),(0,o.kt)("p",null,"At ",(0,o.kt)("inlineCode",{parentName:"p"},"src/app.ts"),", you can see the ",(0,o.kt)("inlineCode",{parentName:"p"},"IntentRecognizer")," is implemented\nby ",(0,o.kt)("a",{parentName:"p",href:"pathname:///api/modules/dev_tools.regexrecognition"},(0,o.kt)("inlineCode",{parentName:"a"},"RegexRecognition"))," module:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="src/app.ts"',title:'"src/app.ts"'},"import recognitionData from './recognitionData';\n//...\n    modules: [\n      //...\n      RegexRecognition.initModule({\n        recognitionData,\n      }),\n    ],\n    //...\n")),(0,o.kt)("p",null,"You can switch to any intent recognition provider without changing the detection codes.\nFor now two implementations are supported:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"pathname:///api/modules/dev_tools#regexp-intent-recognition"},(0,o.kt)("inlineCode",{parentName:"a"},"RegexRecognition"))," -\nsimple implementation by ",(0,o.kt)("inlineCode",{parentName:"li"},"RegExp")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"pathname:///api/modules/dialogflow"},(0,o.kt)("inlineCode",{parentName:"a"},"DialogFlow"))," -\npowered by ",(0,o.kt)("a",{parentName:"li",href:"https://cloud.google.com/dialogflow/es/docs"},"Google Dialogflow ES"))),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},(0,o.kt)("inlineCode",{parentName:"p"},"RegexRecogntion")," should only be used for development and debugging.\nConsider using ",(0,o.kt)("inlineCode",{parentName:"p"},"DialogFlow")," on production."))),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Our bot can recognize simple text messages now.\nNext, we'll learn how to make a complete conversation."))}h.isMDXComponent=!0},4291:function(e,n,t){n.Z=t.p+"assets/images/use-intent-84a6ee34712992906acb9d636078e031.png"}}]);