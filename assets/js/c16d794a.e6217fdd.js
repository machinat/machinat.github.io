"use strict";(self.webpackChunkmachinat_github_io=self.webpackChunkmachinat_github_io||[]).push([[6031],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return d}});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=o.createContext({}),c=function(e){var n=o.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):p(p({},n),e)),t},s=function(e){var n=c(e.components);return o.createElement(i.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},u=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(t),d=r,h=u["".concat(i,".").concat(d)]||u[d]||m[d]||a;return t?o.createElement(h,p(p({ref:n},s),{},{components:t})):o.createElement(h,p({ref:n},s))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,p=new Array(a);p[0]=u;var l={};for(var i in n)hasOwnProperty.call(n,i)&&(l[i]=n[i]);l.originalType=e,l.mdxType="string"==typeof e?e:r,p[1]=l;for(var c=2;c<a;c++)p[c]=t[c];return o.createElement.apply(null,p)}return o.createElement.apply(null,t)}u.displayName="MDXCreateElement"},982:function(e,n,t){t.r(n),t.d(n,{assets:function(){return s},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return m}});var o=t(7462),r=t(3366),a=(t(7294),t(3905)),p=["components"],l={title:"Components for Chat UI"},i=void 0,c={unversionedId:"components-for-cui",id:"components-for-cui",title:"Components for Chat UI",description:"While the app grows, you'll need to reuse the UI for making more features and experiences.",source:"@site/docs/components-for-cui.md",sourceDirName:".",slug:"/components-for-cui",permalink:"/docs/components-for-cui",draft:!1,editUrl:"https://github.com/machinat/machinat/edit/master/website/docs/components-for-cui.md",tags:[],version:"current",frontMatter:{title:"Components for Chat UI"},sidebar:"docs",previous:{title:"Rendering Messages",permalink:"/docs/rendering-messages"},next:{title:"Dependency Injection",permalink:"/docs/dependency-injection"}},s={},m=[{value:"Functional Components",id:"functional-components",level:2},{value:"Component Props",id:"component-props",level:3},{value:"<code>children</code> Prop",id:"children-prop",level:3},{value:"Composing Components",id:"composing-components",level:2},{value:"Cross-Platform Component",id:"cross-platform-component",level:2}],u={toc:m};function d(e){var n=e.components,t=(0,r.Z)(e,p);return(0,a.kt)("wrapper",(0,o.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"While the app grows, you'll need to reuse the UI for making more features and experiences.\nYou can split parts of the chat UI into ",(0,a.kt)("strong",{parentName:"p"},"Components")," for reusing them."),(0,a.kt)("p",null,"Component helps to keep your code ",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Don%27t_repeat_yourself"},"DRY"),".\nThis is important while building a complex and feature-rich app."),(0,a.kt)("h2",{id:"functional-components"},"Functional Components"),(0,a.kt)("p",null,"A component is simply a function that returns a part of the chat UI.\nIt can be used as the element tag like:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"function Hello() {\n  return <p>Hello World!</p>;\n}\n\nbot.render(\n  channel,\n  <>\n    <Hello />\n    <p>I'm a bot.</p>\n  </>\n);\n")),(0,a.kt)("p",null,"The code above works the same as:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"bot.render(\n  channel,\n  <>\n    <p>Hello World!</p>\n    <p>I'm a bot.</p>\n  </>\n);\n")),(0,a.kt)("p",null,"The name of a component must be ",(0,a.kt)("strong",{parentName:"p"},"capitalized"),".\nAn element with an uncapitalized tag is treated as a general element."),(0,a.kt)("h3",{id:"component-props"},"Component Props"),(0,a.kt)("p",null,"A component function receive the ",(0,a.kt)("strong",{parentName:"p"},"props")," object,\nwhich is taken from the attributes of the element.\nFor example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'function Hello(props) {\n  return <p>Hello {props.name}!</p>;\n}\n\nbot.render(\n  channel,\n  <>\n    <Hello name="John Doe" />\n    <p>I\'m a bot.</p>\n  </>\n);\n')),(0,a.kt)("p",null,"In the above codes, we pass ",(0,a.kt)("inlineCode",{parentName:"p"},'"John Doe"')," to the ",(0,a.kt)("inlineCode",{parentName:"p"},"name")," prop.\nThe dynamic ",(0,a.kt)("inlineCode",{parentName:"p"},"props.name")," value is then used to generate UI in the component."),(0,a.kt)("h3",{id:"children-prop"},(0,a.kt)("inlineCode",{parentName:"h3"},"children")," Prop"),(0,a.kt)("p",null,"An element can contain children nodes.\nThey are available as the ",(0,a.kt)("inlineCode",{parentName:"p"},"children")," prop in the component.\nFor example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'function Hello(props) {\n  return (\n    <>\n      <p>Hello {props.name}!</p>;\n      {props.children}\n    </>\n  );\n}\n\nbot.render(\n  channel,\n  <Hello name="John Doe">\n    <p>I\'m a bot.</p>\n  </Hello>\n);\n')),(0,a.kt)("p",null,"In the above codes, we pass the ",(0,a.kt)("inlineCode",{parentName:"p"},"<p>I'm a bot.</p>")," children to the component.\nThe ",(0,a.kt)("inlineCode",{parentName:"p"},"props.children")," is then returned with the hello message attached."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"children")," is useful to decorate messages,\nlike adding a greeting, a menu widget or a feedback query. "),(0,a.kt)("h2",{id:"composing-components"},"Composing Components"),(0,a.kt)("p",null,"Other components can be used in the output of a component too.\nLike:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'function RecommendDailySpecial() {\n  return (\n    <>\n      <p>Today\'s special is Chirashi Sushi!</p>\n      <img src="http://..." />\n    </>\n  );\n}\n\nfunction Welcome({ name }) {\n  return (\n    <>\n      <Hello name={name} />\n      <RecommendDailySpecial />\n    </>\n  );\n}\n\nbot.render(channel, <Welcome name="Jojo" />);\n')),(0,a.kt)("p",null,"We can use components to modularize chat UI at many levels,\nfrom the word choices to the whole expression.\nThis helps to optimize user experiences ."),(0,a.kt)("h2",{id:"cross-platform-component"},"Cross-Platform Component"),(0,a.kt)("p",null,"While making a cross-platform app,\nit's common to have different presentations according to the platform.\nFor example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import * as Messenger from \'@machinat/messenger/components\';\nimport * as Telegram from \'@machinat/telegram/components\';\n\nfunction AskForOrder(props, { platform }) {\n  if (platform === \'messenger\') {\n    return (\n      <Messenger.ButtonTemplate\n        buttons={<>\n          <Messenger.PostbackButton title="\ud83c\udf2d" payload="hotdog" />\n          <Messenger.PostbackButton title="\ud83c\udf2e" payload="taco" />\n        </>}\n      >\n        Which one would you like?\n      </Messenger.ButtonTemplate>\n    );\n  }\n  if (platform === \'telegram\') {\n    return (\n      <Telegram.Text\n        replyMarkup={\n          <Telegram.ReplyKeyboard>\n            <Telegram.TextReply text="\ud83c\udf2d" />\n            <Telegram.TextReply text="\ud83c\udf2e" />\n          </Telegram.ReplyKeyboard>\n        }\n      >\n        Which one would you like?\n      </Telegram.Text>\n    );\n  }\n  return <p>Would you like <b>hotdog</b> or <b>taco</b>?</p>\n}\n')),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"platform")," of the second param shows which platform is rendering to.\nWe can return different native components according to it."),(0,a.kt)("p",null,"At the end of the function, we can add a default UI using only general elements.\nThis ensures the component can be used on all the platforms."))}d.isMDXComponent=!0}}]);